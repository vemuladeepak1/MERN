{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Prohiree_Updated\\\\WFH\\\\client\\\\src\\\\component\\\\Signup.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, TextField, Button, Typography, makeStyles, Paper, MenuItem, Input, InputAdornment, FormControl, InputLabel, OutlinedInput, IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { toast } from 'react-toastify';\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\nimport { Flag, Search } from \"@material-ui/icons\";\nconst useStyles = makeStyles(theme => ({\n  body: {\n    padding: \"60px 60px\"\n  },\n  inputBox: {\n    width: \"400px\"\n  },\n  submitButton: {\n    width: \"400px\"\n  },\n  inputIcon: {\n    margin: 0,\n    position: \"absolute\",\n    top: \"50%\",\n    right: \"0px\",\n    transform: \"translate(-50%,-50%)\"\n  }\n}));\n\nconst MultifieldInput = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    education,\n    setEducation\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [education.map((obj, key) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      className: classes.inputBox,\n      style: {\n        paddingLeft: 0,\n        paddingRight: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: `Institution Name #${key + 1}`,\n          value: education[key].institutionName,\n          onChange: event => {\n            const newEdu = [...education];\n            newEdu[key].institutionName = event.target.value;\n            setEducation(newEdu);\n          },\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Start Year\",\n          value: obj.startYear,\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: event => {\n            const newEdu = [...education];\n            newEdu[key].startYear = event.target.value;\n            setEducation(newEdu);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"End Year\",\n          value: obj.endYear,\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: event => {\n            const newEdu = [...education];\n            newEdu[key].endYear = event.target.value;\n            setEducation(newEdu);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => setEducation([...education, {\n          institutionName: \"\",\n          startYear: \"\",\n          endYear: \"\"\n        }]),\n        className: classes.inputBox,\n        children: \"Add another institution details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MultifieldInput, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultifieldInput;\n\nconst Login = props => {\n  _s2();\n\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [otp, setotp] = useState(\"\");\n  const [code, setCode] = useState('');\n  const [loggedin, setLoggedin] = useState(isAuth());\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    // cpassword:\"\",\n    name: \"\",\n    // education: [],\n    // skills: [],\n    // resume: \"\",\n    // profile: \"\",\n    // bio: \"\",\n    contactNumber: \"\"\n  });\n  const [phone, setPhone] = useState(\"\");\n  const [education, setEducation] = useState([{\n    institutionName: \"\",\n    startYear: \"\",\n    endYear: \"\"\n  }]);\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\"\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\"\n    },\n    // cpassword: {\n    //   untouched: true,\n    //   required: true,\n    //   error: false,\n    //   message: \"\",\n    // },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\"\n    }\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({ ...signupDetails,\n      [key]: value\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({ ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message\n      }\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach(obj => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n    let updatedDetails = { ...signupDetails // education: education\n      //   .filter((obj) => obj.institutionName.trim() !== \"\")\n      //   .map((obj) => {\n      //     if (obj[\"endYear\"] === \"\") {\n      //       delete obj[\"endYear\"];\n      //     }\n      //     return obj;\n      //   }),  \n\n    };\n\n    if (phone !== \"\") {\n      updatedDetails = { ...signupDetails,\n        contactNumber: `+${phone}`\n      };\n    } else {\n      updatedDetails = { ...signupDetails,\n        contactNumber: \"\"\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n    const verified = !Object.keys(tmpErrorHandler).some(obj => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios.post(apiList.signup, updatedDetails).then(response => {\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"type\", response.data.type);\n        setLoggedin(isAuth());\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Logged in successfully\"\n        });\n        console.log(response);\n      }).catch(err => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.err\n        });\n        console.log(err.response);\n      });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\"\n      });\n    }\n  }; // const[recaptcha , setRecaptcha] = useState(false);\n  // const handleonRecaptcha = (value) => {\n  //   // console.log(\"Captcha Value:\", value);\n  //   setRecaptcha(!recaptcha)\n  // }\n\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach(obj => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n    let updatedDetails = { ...signupDetails\n    };\n\n    if (phone !== \"\") {\n      updatedDetails = { ...signupDetails,\n        contactNumber: `+${phone}`\n      };\n    } else {\n      updatedDetails = { ...signupDetails,\n        contactNumber: \"\"\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n    const verified = !Object.keys(tmpErrorHandler).some(obj => {\n      return tmpErrorHandler[obj].error;\n    });\n    console.log(updatedDetails);\n\n    if (verified) {\n      axios.post(apiList.signup, updatedDetails).then(response => {\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"type\", response.data.type);\n        setLoggedin(isAuth());\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Logged in successfully\"\n        });\n        console.log(response);\n      }).catch(err => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message\n        });\n        console.log(err.response);\n      });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\"\n      });\n    }\n  }; // for setting the phone number \n\n\n  useEffect(() => {\n    setCode(otp);\n  }, [otp]);\n  const [verify, setVerify] = useState(true); // sending otp to the client number\n\n  const sendOTP = () => {\n    fetch(`http://localhost:4444/api/sendotp?phonenumber=${phone}&channel=sms`, {\n      method: \"get\"\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.message);\n      } else {\n        // setResult(data.myposts)\n        console.log(data.message); // console.log(data)\n      }\n    });\n  }; // verifing the otp and the client number\n\n\n  const validateOTP = () => {\n    // console.log(code)\n    // console.log(phonenumber)\n    fetch(`http://localhost:4444/api/verifyotp?phonenumber=${phone}&code=${code}`, {\n      method: \"get\"\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        // console.log(`The given ${data.phonenumber} is ${data.message} `)\n        toast.error(data.error);\n        console.log(data.error);\n      } else {\n        console.log(`The given ${phone} is ${data.message} `);\n        toast.success(data.message);\n        setVerify(!verify);\n      }\n    });\n  };\n\n  const history = useHistory(); // google auth logic\n\n  const [showloginButton, setShowloginButton] = useState(true); // const clientId = \"71363042296-4kqs7oqffuojql8r5j5jhn36ugm4jo2b.apps.googleusercontent.com\";\n\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n\n  const onLoginSuccess = res => {\n    console.log('Login Success:', res.profileObj);\n    setShowloginButton(!showloginButton);\n    setShowlogoutButton(true); // history.push(\"/applications\")\n  };\n\n  const onLoginFailure = res => {\n    console.log('Login Failed:', res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n  };\n\n  return loggedin ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    className: classes.body,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 5,\n      direction: \"column\",\n      spacing: 5,\n      alignItems: \"center\",\n      justify: \"center\",\n      style: {\n        margin: \"70px auto 50px auto\",\n        padding: \"20px\",\n        boxShadow: \"0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h2\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"Category\",\n          variant: \"outlined\",\n          className: classes.inputBox,\n          value: signupDetails.type,\n          onChange: event => {\n            handleInput(\"type\", event.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"applicant\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"recruiter\",\n            children: \"Recruiter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Name\",\n          value: signupDetails.name,\n          onChange: event => handleInput(\"name\", event.target.value),\n          className: classes.inputBox,\n          error: inputErrorHandler.name.error,\n          helperText: inputErrorHandler.name.message,\n          onBlur: event => {\n            if (event.target.value === \"\") {\n              handleInputError(\"name\", true, \"Name is required\");\n            } else {\n              handleInputError(\"name\", false, \"\");\n            }\n          },\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(EmailInput, {\n          label: \"Email\",\n          value: signupDetails.email,\n          onChange: event => handleInput(\"email\", event.target.value),\n          inputErrorHandler: inputErrorHandler,\n          handleInputError: handleInputError,\n          className: classes.inputBox,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(PhoneInput, {\n          inputStyle: {\n            width: \"400px\"\n          },\n          country: \"in\",\n          value: phone,\n          onChange: phone => setPhone(phone)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 14\n        }, this), phone.length > 2 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#exampleModalCenter\",\n          type: \"button\",\n          className: `btn btn-primary ${classes.inputIcon}`,\n          onClick: () => sendOTP(),\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 17\n        }, this) : null // <button  type=\"button\" className={`btn btn-primary ${classes.inputIcon}`} >Verified</button>\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal fade\",\n        id: \"exampleModalCenter\",\n        tabindex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"exampleModalCenterTitle\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-dialog modal-dialog-centered\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                class: \"modal-title\",\n                id: \"exampleModalLongTitle\",\n                children: \"Reset Your Account Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"close\",\n                \"data-dismiss\": \"modal\",\n                \"aria-label\": \"Close\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"  text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: [\"Please enter the one time password \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 64\n                  }, this), \" to verify your account\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"otp\",\n                  class: \"inputs d-flex flex-row justify-content-center mt-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control w-50\",\n                    id: \"exampleInputName\",\n                    placeholder: \"Enter OTP\",\n                    maxLength: \"6\",\n                    onChange: e => setotp(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    class: \"btn btn-danger px-4 validate mt-4\",\n                    \"aria-label\": \"Close\",\n                    \"data-dismiss\": \"modal\",\n                    onClick: () => {\n                      validateOTP();\n                    },\n                    children: \"Validate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 31\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-2 mt-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"content d-flex justify-content-center align-items-center\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Didn't get the code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 96\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    class: \"text-decoration-none ms-3\",\n                    children: \" Resend\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 129\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(PasswordInput, {\n          label: \"Password\",\n          value: signupDetails.password,\n          onChange: event => handleInput(\"password\", event.target.value),\n          className: classes.inputBox,\n          error: inputErrorHandler.password.error,\n          helperText: inputErrorHandler.password.message,\n          onBlur: event => {\n            if (event.target.value === \"\") {\n              handleInputError(\"password\", true, \"Password is required\");\n            } else {\n              handleInputError(\"password\", false, \"\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this), signupDetails.type === \"applicant\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            signupDetails.type === \"applicant\" ? handleLogin() : handleLoginRecruiter();\n          },\n          className: classes.submitButton // disabled={!recaptcha}\n          ,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Login, \"fRuT7B7x+RbzN3E93DV6tehWzP0=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c2 = Login;\nexport default Login; // {/* <Grid item>\n//           <PasswordInput\n//             label=\"Re-enter Password\"\n//             value={signupDetails.tmpPassword}\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\n//             className={classes.inputBox}\n//             labelWidth={140}\n//             helperText={inputErrorHandler.tmpPassword.message}\n//             error={inputErrorHandler.tmpPassword.error}\n//             onBlur={(event) => {\n//               if (event.target.value !== signupDetails.password) {\n//                 handleInputError(\n//                   \"tmpPassword\",\n//                   true,\n//                   \"Passwords are not same.\"\n//                 );\n//               }\n//             }}\n//           />\n//         </Grid> */}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MultifieldInput\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["D:/Prohiree_Updated/WFH/client/src/component/Signup.js"],"names":["useState","useContext","useEffect","ReCAPTCHA","GoogleLogin","GoogleLogout","useHistory","Grid","TextField","Button","Typography","makeStyles","Paper","MenuItem","Input","InputAdornment","FormControl","InputLabel","OutlinedInput","IconButton","SearchIcon","toast","axios","Redirect","ChipInput","DescriptionIcon","FaceIcon","PhoneInput","PasswordInput","EmailInput","FileUploadInput","SetPopupContext","apiList","isAuth","Flag","Search","useStyles","theme","body","padding","inputBox","width","submitButton","inputIcon","margin","position","top","right","transform","MultifieldInput","props","classes","education","setEducation","map","obj","key","paddingLeft","paddingRight","institutionName","event","newEdu","target","value","startYear","endYear","Login","setPopup","otp","setotp","code","setCode","loggedin","setLoggedin","signupDetails","setSignupDetails","type","email","password","name","contactNumber","phone","setPhone","inputErrorHandler","setInputErrorHandler","untouched","required","error","message","handleInput","handleInputError","status","handleLogin","tmpErrorHandler","Object","keys","forEach","toUpperCase","substr","updatedDetails","verified","some","post","signup","then","response","localStorage","setItem","data","token","open","severity","console","log","catch","err","handleLoginRecruiter","verify","setVerify","sendOTP","fetch","method","res","json","validateOTP","success","history","showloginButton","setShowloginButton","showlogoutButton","setShowlogoutButton","onLoginSuccess","profileObj","onLoginFailure","onSignoutSuccess","alert","clear","boxShadow","length","e"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n  MenuItem,\r\n  Input,\r\n  InputAdornment,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport { toast } from 'react-toastify';\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\nimport { Flag, Search } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"400px\",\r\n  },\r\n  submitButton: {\r\n    width: \"400px\",\r\n  },\r\n  inputIcon:{\r\n  margin: 0,\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  right:\"0px\",\r\n  transform: \"translate(-50%,-50%)\",\r\n  }\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid\r\n          item\r\n          container\r\n          className={classes.inputBox}\r\n          key={key}\r\n          style={{ paddingLeft: 0, paddingRight: 0 }}\r\n        >\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [otp, setotp] = useState(\"\")\r\n  const [code, setCode] = useState('')\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [signupDetails, setSignupDetails] = useState({\r\n    type: \"applicant\",\r\n    email: \"\",\r\n    password: \"\",\r\n    // cpassword:\"\",\r\n    name: \"\",\r\n    // education: [],\r\n    // skills: [],\r\n    // resume: \"\",\r\n    // profile: \"\",\r\n    // bio: \"\",\r\n    contactNumber: \"\"\r\n    \r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    // cpassword: {\r\n    //   untouched: true,\r\n    //   required: true,\r\n    //   error: false,\r\n    //   message: \"\",\r\n    // },\r\n    name: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setSignupDetails({\r\n      ...signupDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        required: true,\r\n        untouched: false,\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n      // education: education\r\n      //   .filter((obj) => obj.institutionName.trim() !== \"\")\r\n      //   .map((obj) => {\r\n      //     if (obj[\"endYear\"] === \"\") {\r\n      //       delete obj[\"endYear\"];\r\n      //     }\r\n      //     return obj;\r\n      //   }),  \r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.err,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n  // const[recaptcha , setRecaptcha] = useState(false);\r\n\r\n  // const handleonRecaptcha = (value) => {\r\n  //   // console.log(\"Captcha Value:\", value);\r\n  //   setRecaptcha(!recaptcha)\r\n  // }\r\n\r\n  const handleLoginRecruiter = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\nconsole.log(updatedDetails)\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n   // for setting the phone number \r\n\r\n\r\nuseEffect(() => {\r\n    setCode(otp)\r\n}, [otp])\r\n\r\nconst [verify,setVerify] = useState(true)\r\n\r\n   // sending otp to the client number\r\n   const sendOTP = () => {\r\n    fetch(`http://localhost:4444/api/sendotp?phonenumber=${phone}&channel=sms`,\r\n        {\r\n            method: \"get\",\r\n\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n          console.log(data)\r\n            if (data.error) {\r\n                console.log(data.message)\r\n\r\n            } else {\r\n                // setResult(data.myposts)\r\n                console.log(data.message)\r\n                \r\n                // console.log(data)\r\n            }\r\n        })\r\n}\r\n\r\n\r\n    // verifing the otp and the client number\r\n\r\n\r\n    const validateOTP = () => {\r\n      // console.log(code)\r\n      // console.log(phonenumber)\r\n      fetch(`http://localhost:4444/api/verifyotp?phonenumber=${phone}&code=${code}`,\r\n          {\r\n              method: \"get\",\r\n\r\n          }).then(res => res.json())\r\n          .then(data => {\r\n              if (data.error) {\r\n                  // console.log(`The given ${data.phonenumber} is ${data.message} `)\r\n                      toast.error(data.error)\r\n                      console.log(data.error)\r\n\r\n              } else {\r\n                  console.log(`The given ${phone} is ${data.message} `)\r\n                  toast.success(data.message)\r\n                  setVerify(!verify)\r\n              }\r\n             \r\n          })\r\n        \r\n          \r\n  }\r\n\r\nconst history = useHistory();\r\n\r\n// google auth logic\r\nconst [showloginButton, setShowloginButton] = useState(true);\r\n// const clientId = \"71363042296-4kqs7oqffuojql8r5j5jhn36ugm4jo2b.apps.googleusercontent.com\";\r\nconst [showlogoutButton, setShowlogoutButton] = useState(false);\r\nconst onLoginSuccess = (res) => {\r\n    console.log('Login Success:', res.profileObj);\r\n    setShowloginButton(!showloginButton);\r\n    setShowlogoutButton(true);\r\n    // history.push(\"/applications\")\r\n};\r\nconst onLoginFailure = (res) => {\r\n    console.log('Login Failed:', res);\r\n};\r\nconst onSignoutSuccess = () => {\r\n    alert(\"You have been logged out successfully\");\r\n    console.clear();\r\n    setShowloginButton(true);\r\n    setShowlogoutButton(false);\r\n};\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container \r\n       xs ={5}\r\n     direction=\"column\" \r\n     spacing={5} \r\n     alignItems=\"center\" \r\n     justify = 'center' \r\n      style={{\r\n        margin:\"70px auto 50px auto\",\r\n        padding:\"20px\",\r\n        boxShadow: \"0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22)\"\r\n    }}>\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Signup\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            select\r\n            label=\"Category\"\r\n            variant=\"outlined\"\r\n            className={classes.inputBox}\r\n            value={signupDetails.type}\r\n            onChange={(event) => {\r\n              handleInput(\"type\", event.target.value);\r\n            }}\r\n          >\r\n            <MenuItem value=\"applicant\">Student</MenuItem>\r\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            label=\"Name\"\r\n            value={signupDetails.name}\r\n            onChange={(event) => handleInput(\"name\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.name.error}\r\n            helperText={inputErrorHandler.name.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"name\", true, \"Name is required\");\r\n              } else {\r\n                handleInputError(\"name\", false, \"\");\r\n              }\r\n            }}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={signupDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n            required={true}\r\n          \r\n          />\r\n        </Grid>\r\n        <Grid item style={{position:'relative'}}>\r\n            \r\n             <PhoneInput\r\n              inputStyle={{width:\"400px\"}}\r\n              country={\"in\"}\r\n              value={phone}\r\n              onChange={(phone) => setPhone(phone)}\r\n            />\r\n            \r\n           \r\n              {\r\n                phone.length > 2 ?\r\n                <button  data-toggle=\"modal\" data-target=\"#exampleModalCenter\" type=\"button\" className={`btn btn-primary ${classes.inputIcon}`} onClick={() => sendOTP()}>Verify</button>\r\n                :null\r\n                // <button  type=\"button\" className={`btn btn-primary ${classes.inputIcon}`} >Verified</button>\r\n              }\r\n            </Grid>\r\n              <div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Reset Your Account Password</h5>\r\n                      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                      </button>\r\n                    </div>\r\n                        <div class=\"modal-body\">\r\n                        <div class=\"  text-center\">\r\n                        <h6>Please enter the one time password <br /> to verify your account</h6>\r\n                        {/* <div> <span>A code has been sent to</span> <small>*******9897</small> </div> */}\r\n                        <div id=\"otp\" class=\"inputs d-flex flex-row justify-content-center mt-4\">\r\n                            <input type=\"text\" className=\"form-control w-50\" id=\"exampleInputName\"  placeholder=\"Enter OTP\" maxLength=\"6\" onChange={(e) => setotp(e.target.value)}/>\r\n                        </div>\r\n                        <div> <button type='button' class=\"btn btn-danger px-4 validate mt-4\"  aria-label=\"Close\"  data-dismiss=\"modal\" onClick={() =>{ validateOTP()}} >Validate</button> </div>\r\n                    </div>\r\n                    <div class=\"card-2 mt-3\">\r\n                        <div class=\"content d-flex justify-content-center align-items-center\"> <span>Didn't get the code</span> <a href=\"#\" class=\"text-decoration-none ms-3\"> Resend</a> </div>\r\n                    </div>\r\n                     \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={signupDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.password.error}\r\n            helperText={inputErrorHandler.password.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"password\", true, \"Password is required\");\r\n              } else {\r\n                handleInputError(\"password\", false, \"\");\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        {/* <Grid item>\r\n          <PasswordInput\r\n            labelWidth={props.labelWidth ? props.labelWidth : 130}\r\n            label=\"Confirm Password\"\r\n            value={signupDetails.cpassword}\r\n            onChange={(event) => handleInput(\"cpassword\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.cpassword.error}\r\n            helperText={inputErrorHandler.cpassword.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"cpassword\", true, \"Confirm Password is required\");\r\n              }else if(signupDetails.password !== signupDetails.cpassword){\r\n                return handleInputError (\"cpassword\", true, \"password should match\");\r\n              } \r\n              else {\r\n                handleInputError(\"cpassword\", false, \"\");\r\n              }\r\n            }}\r\n            \r\n          />\r\n          \r\n        </Grid> */}\r\n        {signupDetails.type === \"applicant\" ? (\r\n          <>\r\n            {/* <MultifieldInput\r\n              education={education}\r\n              setEducation={setEducation}\r\n            />\r\n            <Grid item>\r\n              <ChipInput\r\n                className={classes.inputBox}\r\n                label=\"Skills\"\r\n                variant=\"outlined\"\r\n                helperText=\"Press enter to add skills\"\r\n                onChange={(chips) =>\r\n                  setSignupDetails({ ...signupDetails, skills: chips })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Resume (.pdf)\"\r\n                icon={<DescriptionIcon />}\r\n                // value={files.resume}\r\n                // onChange={(event) =>\r\n                //   setFiles({\r\n                //     ...files,\r\n                //     resume: event.target.files[0],\r\n                //   })\r\n                // }\r\n                uploadTo={apiList.uploadResume}\r\n                handleInput={handleInput}\r\n                identifier={\"resume\"}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Profile Photo (.jpg/.png)\"\r\n                icon={<FaceIcon />}\r\n                // value={files.profileImage}\r\n                // onChange={(event) =>\r\n                //   setFiles({\r\n                //     ...files,\r\n                //     profileImage: event.target.files[0],\r\n                //   })\r\n                // }\r\n                uploadTo={apiList.uploadProfileImage}\r\n                handleInput={handleInput}\r\n                identifier={\"profile\"}\r\n              />\r\n            </Grid> */}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* <Grid item style={{ width: \"100%\" }}>\r\n              <TextField\r\n                label=\"Bio (upto 250 words)\"\r\n                multiline\r\n                rows={8}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"outlined\"\r\n                value={signupDetails.bio}\r\n                onChange={(event) => {\r\n                  if (\r\n                    event.target.value.split(\" \").filter(function (n) {\r\n                      return n != \"\";\r\n                    }).length <= 250\r\n                  ) {\r\n                    handleInput(\"bio\", event.target.value);\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n            <Typography >{\"Please Upload Your Company Logo\"}</Typography >\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Profile Photo (.jpg/.png)\"\r\n                icon={<FaceIcon />}\r\n                // value={files.profileImage}\r\n                // onChange={(event) =>\r\n                //   setFiles({\r\n                //     ...files,\r\n                //     profileImage: event.target.files[0],\r\n                //   })\r\n                // }\r\n                uploadTo={apiList.uploadProfileImage}\r\n                handleInput={handleInput}\r\n                identifier={\"profile\"}\r\n              />\r\n            </Grid> */}\r\n          </>\r\n        )}\r\n        {/* <ReCAPTCHA\r\n       sitekey = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n       onChange ={handleonRecaptcha}\r\n       /> */}\r\n       {/* google authentication starts */}\r\n      {/* <Grid item >\r\n        <Button>\r\n            { showloginButton ?\r\n                <GoogleLogin\r\n                    clientId=\"71363042296-4kqs7oqffuojql8r5j5jhn36ugm4jo2b.apps.googleusercontent.com\"\r\n                    buttonText=\"Sign In\"\r\n                    onSuccess={onLoginSuccess}\r\n                    onFailure={onLoginFailure}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    isSignedIn={true}\r\n                /> : null}\r\n            { showlogoutButton ?\r\n                <GoogleLogout\r\n                    clientId=\"71363042296-4kqs7oqffuojql8r5j5jhn36ugm4jo2b.apps.googleusercontent.com\"\r\n                    buttonText=\"Sign Out\"\r\n                    onLogoutSuccess={onSignoutSuccess}\r\n                >\r\n                </GoogleLogout> : null\r\n             }\r\n            </Button>\r\n        </Grid> */}\r\n        {/* google auth ends */}\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              signupDetails.type === \"applicant\"\r\n                ? handleLogin()\r\n                : handleLoginRecruiter();\r\n            }}\r\n            className={classes.submitButton}\r\n            // disabled={!recaptcha}\r\n          >\r\n            Signup\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// {/* <Grid item>\r\n//           <PasswordInput\r\n//             label=\"Re-enter Password\"\r\n//             value={signupDetails.tmpPassword}\r\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\r\n//             className={classes.inputBox}\r\n//             labelWidth={140}\r\n//             helperText={inputErrorHandler.tmpPassword.message}\r\n//             error={inputErrorHandler.tmpPassword.error}\r\n//             onBlur={(event) => {\r\n//               if (event.target.value !== signupDetails.password) {\r\n//                 handleInputError(\r\n//                   \"tmpPassword\",\r\n//                   true,\r\n//                   \"Passwords are not same.\"\r\n//                 );\r\n//               }\r\n//             }}\r\n//           />\r\n//         </Grid> */}\r\n"]},"metadata":{},"sourceType":"module"}