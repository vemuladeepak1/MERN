{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Prohiree_Updated\\\\WFH\\\\client\\\\src\\\\lib\\\\FileUploadInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { Grid, Button, TextField, LinearProgress } from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\nimport Axios from \"axios\";\nimport { SetPopupContext } from \"../App\";\n\nconst FileUploadInput = props => {\n  _s();\n\n  const setPopup = useContext(SetPopupContext);\n  const {\n    uploadTo,\n    identifier,\n    handleInput\n  } = props;\n  const [file, setFile] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  const filetype = [\"application/pdf\"];\n  const Imagefiletype = [\"image/jpg\", \"image/jpeg\", \"image/png\"];\n\n  const handleUpload = () => {\n    if (identifier === \"resume\") {\n      if (filetype.includes(file.type)) {\n        const data = new FormData();\n        data.append(\"file\", file);\n        data.append(\"upload_preset\", \"Test_post\");\n        data.append(\"cloud_name\", \"dipak1243\");\n        Axios.post(\"https://api.cloudinary.com/v1_1/dipak1243/image/upload\", data, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          onUploadProgress: progressEvent => {\n            setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n          }\n        }).then(response => {\n          // console.log(response.data)\n          handleInput(identifier, [response.data]);\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"File uploaded successfully\"\n          });\n        }).catch(err => {\n          console.log(err.response);\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: \"Error while uploading\" //   message: err.response.data\n            //     ? err.response.data.message\n            //     : err.response.statusText,\n\n          });\n        });\n      } else {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Please Select Only PDF\" //   message: err.response.data\n          //     ? err.response.data.message\n          //     : err.response.statusText,\n\n        });\n      }\n    } else if (identifier === \"profile\") {\n      if (Imagefiletype.includes(file.type)) {\n        const data = new FormData();\n        data.append(\"file\", file);\n        data.append(\"upload_preset\", \"Test_post\");\n        data.append(\"cloud_name\", \"dipak1243\");\n        Axios.post(\"https://api.cloudinary.com/v1_1/dipak1243/image/upload\", data, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          onUploadProgress: progressEvent => {\n            setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n          }\n        }).then(response => {\n          console.log(response);\n          handleInput(identifier, response.data.url);\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"File uploaded successfully\"\n          });\n        }).catch(err => {\n          console.log(err.response);\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: \"Error while uploading\" //   message: err.response.data\n            //     ? err.response.data.message\n            //     : err.response.statusText,\n\n          });\n        });\n      } else {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Please Select Only JPG/JPEG/PNG\" //   message: err.response.data\n          //     ? err.response.data.message\n          //     : err.response.statusText,\n\n        });\n      }\n    } //  if(identifier === \"profile\" && Imagefiletype.includes(file.type)){\n    //   const data = new FormData();\n    //   data.append(\"file\", file);\n    //   data.append(\"upload_preset\",\"Test_post\");\n    //   data.append(\"cloud_name\",\"dipak1243\");\n    //   Axios.post(\"https://api.cloudinary.com/v1_1/dipak1243/image/upload\", data, {\n    //     headers: {\n    //       \"Content-Type\": \"multipart/form-data\",\n    //     },\n    //     onUploadProgress: (progressEvent) => {\n    //       setUploadPercentage(\n    //         parseInt(\n    //           Math.round((progressEvent.loaded * 100) / progressEvent.total)\n    //         )\n    //       );\n    //     },\n    //   })\n    //     .then((response) => {\n    //       console.log(response)\n    //       handleInput(identifier, response.data.url);\n    //       setPopup({\n    //         open: true,\n    //         severity: \"success\",\n    //         message: \"File uploaded successfully\",\n    //       });\n    //     })\n    //     .catch((err) => {\n    //       console.log(err.response);\n    //       setPopup({\n    //         open: true,\n    //         severity: \"error\",\n    //         message: \"Error while uploading\",\n    //         //   message: err.response.data\n    //         //     ? err.response.data.message\n    //         //     : err.response.statusText,\n    //       });\n    //     });\n    //   }else{\n    //     setPopup({\n    //       open: true,\n    //       severity: \"error\",\n    //       message: \"Please Select Only JPG/JPEG/PNG\",\n    //       //   message: err.response.data\n    //       //     ? err.response.data.message\n    //       //     : err.response.statusText,\n    //     });\n    //   }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    direction: \"column\",\n    className: props.className,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          component: \"label\",\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          children: [props.icon, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            style: {\n              display: \"none\"\n            },\n            onChange: event => {\n              setUploadPercentage(0);\n              setFile(event.target.files[0]);\n            } // onChange={onChange}\n            // onChange={\n            //   (e) => {}\n            //   //   setSource({ ...source, place_img: e.target.files[0] })\n            // }\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: props.label,\n          value: file ? file.name || \"\" : \"\",\n          InputProps: {\n            readOnly: true\n          },\n          variant: \"outlined\",\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          onClick: () => handleUpload(),\n          disabled: file ? false : true,\n          children: /*#__PURE__*/_jsxDEV(CloudUpload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), uploadPercentage !== 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: uploadPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUploadInput, \"DTHqfBbxBT2IQbhIUOGxHDcJuB4=\");\n\n_c = FileUploadInput;\nexport default FileUploadInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploadInput\");","map":{"version":3,"sources":["D:/Prohiree_Updated/WFH/client/src/lib/FileUploadInput.js"],"names":["useState","useContext","Grid","Button","TextField","LinearProgress","CloudUpload","Axios","SetPopupContext","FileUploadInput","props","setPopup","uploadTo","identifier","handleInput","file","setFile","uploadPercentage","setUploadPercentage","filetype","Imagefiletype","handleUpload","includes","type","data","FormData","append","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","then","response","open","severity","message","catch","err","console","log","url","className","width","height","icon","display","event","target","files","label","name","readOnly","marginTop"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { Grid, Button, TextField, LinearProgress } from \"@material-ui/core\";\r\nimport { CloudUpload } from \"@material-ui/icons\";\r\nimport Axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nconst FileUploadInput = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const { uploadTo, identifier, handleInput } = props;\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const filetype=[\"application/pdf\"]\r\n  const Imagefiletype=[\"image/jpg\",\"image/jpeg\",\"image/png\"]\r\n  const handleUpload = () => {\r\n    \r\n    if(identifier ===\"resume\"){\r\n      if(filetype.includes(file.type)){\r\n        const data = new FormData();\r\n        data.append(\"file\", file);\r\n        data.append(\"upload_preset\",\"Test_post\");\r\n        data.append(\"cloud_name\",\"dipak1243\");\r\n        Axios.post(\"https://api.cloudinary.com/v1_1/dipak1243/image/upload\", data, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n          onUploadProgress: (progressEvent) => {\r\n            setUploadPercentage(\r\n              parseInt(\r\n                Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n              )\r\n            );\r\n          },\r\n        })\r\n          .then((response) => {\r\n            // console.log(response.data)\r\n            handleInput(identifier, [response.data]);\r\n            setPopup({\r\n              open: true,\r\n              severity: \"success\",\r\n              message: \"File uploaded successfully\",\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response);\r\n            setPopup({\r\n              open: true,\r\n              severity: \"error\",\r\n              message: \"Error while uploading\",\r\n              //   message: err.response.data\r\n              //     ? err.response.data.message\r\n              //     : err.response.statusText,\r\n            });\r\n          });\r\n        }else{\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Please Select Only PDF\",\r\n            //   message: err.response.data\r\n            //     ? err.response.data.message\r\n            //     : err.response.statusText,\r\n          });\r\n      }\r\n    }else if(identifier === \"profile\"){\r\n      if(Imagefiletype.includes(file.type)){ \r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"upload_preset\",\"Test_post\");\r\n      data.append(\"cloud_name\",\"dipak1243\");\r\n      Axios.post(\"https://api.cloudinary.com/v1_1/dipak1243/image/upload\", data, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          setUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        },\r\n      })\r\n        .then((response) => {\r\n          console.log(response)\r\n          handleInput(identifier, response.data.url);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"File uploaded successfully\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error while uploading\",\r\n            //   message: err.response.data\r\n            //     ? err.response.data.message\r\n            //     : err.response.statusText,\r\n          });\r\n        });\r\n      }else{\r\n        setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Please Select Only JPG/JPEG/PNG\",\r\n        //   message: err.response.data\r\n        //     ? err.response.data.message\r\n        //     : err.response.statusText,\r\n      });\r\n    }\r\n      \r\n    }\r\n    \r\n    \r\n    //  if(identifier === \"profile\" && Imagefiletype.includes(file.type)){\r\n\r\n    \r\n    //   const data = new FormData();\r\n    //   data.append(\"file\", file);\r\n    //   data.append(\"upload_preset\",\"Test_post\");\r\n    //   data.append(\"cloud_name\",\"dipak1243\");\r\n    //   Axios.post(\"https://api.cloudinary.com/v1_1/dipak1243/image/upload\", data, {\r\n    //     headers: {\r\n    //       \"Content-Type\": \"multipart/form-data\",\r\n    //     },\r\n    //     onUploadProgress: (progressEvent) => {\r\n    //       setUploadPercentage(\r\n    //         parseInt(\r\n    //           Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n    //         )\r\n    //       );\r\n    //     },\r\n    //   })\r\n    //     .then((response) => {\r\n    //       console.log(response)\r\n    //       handleInput(identifier, response.data.url);\r\n    //       setPopup({\r\n    //         open: true,\r\n    //         severity: \"success\",\r\n    //         message: \"File uploaded successfully\",\r\n    //       });\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.log(err.response);\r\n    //       setPopup({\r\n    //         open: true,\r\n    //         severity: \"error\",\r\n    //         message: \"Error while uploading\",\r\n    //         //   message: err.response.data\r\n    //         //     ? err.response.data.message\r\n    //         //     : err.response.statusText,\r\n    //       });\r\n    //     });\r\n    //   }else{\r\n    //     setPopup({\r\n    //       open: true,\r\n    //       severity: \"error\",\r\n    //       message: \"Please Select Only JPG/JPEG/PNG\",\r\n    //       //   message: err.response.data\r\n    //       //     ? err.response.data.message\r\n    //       //     : err.response.statusText,\r\n    //     });\r\n    //   }\r\n    \r\n  };\r\n\r\n  return (\r\n    <Grid container item xs={12} direction=\"column\" className={props.className}>\r\n      <Grid container item xs={12} spacing={0}>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component=\"label\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          >\r\n            {props.icon}\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              onChange={(event) => {\r\n              \r\n                setUploadPercentage(0);\r\n                setFile(event.target.files[0]);\r\n              }}\r\n              // onChange={onChange}\r\n              // onChange={\r\n              //   (e) => {}\r\n              //   //   setSource({ ...source, place_img: e.target.files[0] })\r\n              // }\r\n            />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label={props.label}\r\n            value={file ? file.name || \"\" : \"\"}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n            onClick={() => handleUpload()}\r\n            disabled={file ? false : true}\r\n          >\r\n            <CloudUpload />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {uploadPercentage !== 0 ? (\r\n        <Grid item xs={12} style={{ marginTop: \"10px\" }}>\r\n          <LinearProgress variant=\"determinate\" value={uploadPercentage} />\r\n        </Grid>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FileUploadInput;"]},"metadata":{},"sourceType":"module"}